name: CI/CD

on: push

env:
  PROJECT: "push-s3-alb-access-logs-to-elasticsearch"

permissions:
  id-token: write
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-node@v3
      with:
        node-version: '16.x'

    - run: npm install --only=production

    - run: zip -r build-$GITHUB_SHA.zip index.js node_modules

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@master
      with:
        aws-region: eu-west-1
        role-to-assume: ${{ secrets.AWS_ROLE_CLOUDFORMATION_TO_ASSUME }}
        role-duration-seconds: 3600
        role-session-name: CI

    - name: Deploy or Create Lambda Function
      env:
        FUNCTION_NAME: ${{ env.PROJECT }}
        ZIP_FILE: build-${{ github.sha }}.zip
        HANDLER: index.js
        RUNTIME: nodejs18.x
        ROLE_ARN: arn:aws:iam::939614502044:role/lambda_exec_role
      run: |
        set -e

        echo "Deploying Lambda function: $FUNCTION_NAME"

        if aws lambda get-function --function-name "$FUNCTION_NAME" > /dev/null 2>&1; then
          echo "Function exists. Updating code..."
          aws lambda update-function-code \
            --function-name "$FUNCTION_NAME" \
            --zip-file fileb://$ZIP_FILE \
            --publish
        else
          echo "Function does not exist. Creating new function..."
          LAMBDA_VERSION=$(aws lambda create-function \
            --function-name "$FUNCTION_NAME" \
            --runtime "$RUNTIME" \
            --handler "$HANDLER" \
            --zip-file fileb://$ZIP_FILE \
            --publish \
            --query 'Version' \
            --output text) \
            --role "$ROLE_ARN"
        fi
